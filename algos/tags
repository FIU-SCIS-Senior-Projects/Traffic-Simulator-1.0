!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Any	routing.py	/^from typing import Any, Tuple, List, Dict, FrozenSet, NamedTuple$/;"	kind:namespace	line:5
Dict	routing.py	/^from typing import Any, Tuple, List, Dict, FrozenSet, NamedTuple$/;"	kind:namespace	line:5
EmptyMatrixProvided	routing.py	/^class EmptyMatrixProvided(Exception):$/;"	kind:class	line:34
FrozenSet	routing.py	/^from typing import Any, Tuple, List, Dict, FrozenSet, NamedTuple$/;"	kind:namespace	line:5
GraphDiam2h	routing.py	/^class GraphDiam2h(nx.DiGraph):$/;"	kind:class	line:362
GraphNotSet	routing.py	/^class GraphNotSet(Exception):$/;"	kind:class	line:14
GraphUtils	routing.py	/^class GraphUtils:$/;"	kind:class	line:49
HDS	routing.py	/^HDS = List[HDS_Element]$/;"	kind:variable	line:43
HDS_Element	routing.py	/^HDS_Element = FrozenSet[FrozenSet]$/;"	kind:variable	line:42
HDS_to_HDT	routing.py	/^    def HDS_to_HDT(hds: HDS):$/;"	kind:member	line:182
HDT_Node	routing.py	/^HDT_Node = NamedTuple("HDT_Node", [('set', FrozenSet), ('level', int)])$/;"	kind:variable	line:44
H_i	routing.py	/^            H_i = set()$/;"	kind:variable	line:142
List	routing.py	/^from typing import Any, Tuple, List, Dict, FrozenSet, NamedTuple$/;"	kind:namespace	line:5
M	test.py	/^    M = np.matrix([[0.0, 3.0, 8.0, 6.0, 0.0, 3.0, 4.0, 3.0],$/;"	kind:variable	line:5
NamedTuple	routing.py	/^from typing import Any, Tuple, List, Dict, FrozenSet, NamedTuple$/;"	kind:namespace	line:5
NonOverlappingEndVertices	routing.py	/^class NonOverlappingEndVertices(Exception):$/;"	kind:class	line:26
NonPowerOf2Graph	routing.py	/^class NonPowerOf2Graph(Exception):$/;"	kind:class	line:30
NonSquareMatrix	routing.py	/^class NonSquareMatrix(Exception):$/;"	kind:class	line:10
Routing	routing.py	/^class Routing(object):$/;"	kind:class	line:377
Tuple	routing.py	/^from typing import Any, Tuple, List, Dict, FrozenSet, NamedTuple$/;"	kind:namespace	line:5
U	routing.py	/^            U = np.random.uniform(.5, 1)$/;"	kind:variable	line:129
UnknownAlgorithm	routing.py	/^class UnknownAlgorithm(Exception):$/;"	kind:class	line:18
Vertex	routing.py	/^        class Vertex(object):$/;"	kind:class	line:111
VertexNonExistent	routing.py	/^class VertexNonExistent(Exception):$/;"	kind:class	line:22
__init__	routing.py	/^            def __init__(self, rep, cluster, flag):$/;"	kind:member	line:115
__init__	routing.py	/^    def __init__(self, M) -> None:$/;"	kind:member	line:363
__init__	routing.py	/^    def __init__(self, M: List[List[float]] = None) -> None:$/;"	kind:member	line:378
__slots__	routing.py	/^            __slots__ = ['rep', 'cluster', 'flag']$/;"	kind:variable	line:113
ceil	routing.py	/^from math import ceil, log2$/;"	kind:namespace	line:4
check_alpha_padded	routing.py	/^    def check_alpha_padded(G, hds: HDS, alpha: float, v: int) -> bool:$/;"	kind:member	line:255
check_num_pow2	routing.py	/^    def check_num_pow2(num):$/;"	kind:member	line:271
compress_path	routing.py	/^    def compress_path(path: List[Any]) -> List[Any]:$/;"	kind:member	line:203
create_in_out_mat	routing.py	/^    def create_in_out_mat(M, new_weight=np.float64(1)):$/;"	kind:member	line:333
create_pow2_diameter_mat	routing.py	/^    def create_pow2_diameter_mat(np_mat):$/;"	kind:member	line:73
get_path	routing.py	/^    def get_path(self, algo, s, t: int) -> List[int]:$/;"	kind:member	line:404
graph_diameter	routing.py	/^    def graph_diameter(G):$/;"	kind:member	line:51
hds	test.py	/^    hds = GraphUtils.randomized_HDS_gen($/;"	kind:variable	line:21
hdt	test.py	/^    hdt = GraphUtils.HDS_to_HDT(hds)$/;"	kind:variable	line:24
hdt_sp	test.py	/^            hdt_sp = nx.dijkstra_path(hdt, hdt_v1, hdt_v2)$/;"	kind:variable	line:41
hdt_v1	test.py	/^            hdt_v1 = hdt.nodes()[i]$/;"	kind:variable	line:35
hdt_v2	test.py	/^            hdt_v2 = hdt.nodes()[j]$/;"	kind:variable	line:36
log2	routing.py	/^from math import ceil, log2$/;"	kind:namespace	line:4
main	visual_graph.py	/^def main():$/;"	kind:function	line:7
merge	routing.py	/^    def merge(path1, path2: List[Any]) -> List[Any]:$/;"	kind:member	line:222
np	routing.py	/^import numpy as np$/;"	kind:namespace	line:1
num_nodes	test.py	/^    num_nodes = len(hdt.nodes())$/;"	kind:variable	line:32
nx	routing.py	/^import networkx as nx$/;"	kind:namespace	line:2
nx	visual_graph.py	/^import networkx as nx$/;"	kind:namespace	line:2
pi	routing.py	/^            pi = np.random.permutation(num_vertices)$/;"	kind:variable	line:125
plotly	visual_graph.py	/^import plotly.plotly as py$/;"	kind:namespace	line:1
pprint	test.py	/^from pprint import pprint$/;"	kind:namespace	line:1
projected_path	test.py	/^            projected_path = GraphUtils.projection(r._graph, hdt_sp)$/;"	kind:variable	line:42
projection	routing.py	/^    def projection(G, hdt_path: List[HDT_Node]) -> List[int]:$/;"	kind:member	line:235
py	visual_graph.py	/^import plotly.plotly as py$/;"	kind:namespace	line:1
r	test.py	/^    r = Routing(M)$/;"	kind:variable	line:20
r_neighborhood	routing.py	/^    def r_neighborhood(G, v: float, r: float) -> FrozenSet[int]:$/;"	kind:member	line:62
randomized_HDS_gen	routing.py	/^    def randomized_HDS_gen(G, pi=None, U=None) -> HDS:$/;"	kind:member	line:106
routing.py	routing.py	1;"	kind:file	line:1
set_graph	routing.py	/^    def set_graph(self, M: List[List[float]]) -> None:$/;"	kind:member	line:381
test.py	test.py	1;"	kind:file	line:1
top_down_integral_scheme_generation	routing.py	/^    def top_down_integral_scheme_generation($/;"	kind:member	line:287
visual_graph.py	visual_graph.py	1;"	kind:file	line:1

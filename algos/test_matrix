
M = np.matrix([[0.0, 1.0, 2.0, 0.0],
               [5.0, 0.0, 0.0, 3.0],
               [2.0, 0.0, 0.0, 4.0],
               [0.0, 1.0, 1.0, 0.0]])


M = np.matrix([[-1.0, 1.0, 2.0, -1.0],
               [5.0, -1.0, -1.0, 3.0],
               [2.0, -1.0, -1.0, 4.0],
               [-1.0, 1.0, 1.0, -1.0]])


Graph found in page 33:

M = np.matrix([[0.0, 3.0, 8.0, 6.0, 0.0, 3.0, 4.0, 3.0],
               [3.0, 0.0, 2.0, 0.0, 4.0, 4.0, 0.0, 4.0],
               [8.0, 2.0, 0.0, 2.0, 3.0, 0.0, 3.0, 1.0],
               [6.0, 0.0, 2.0, 0.0, 1.0, 4.0, 2.0, 0.0],
               [0.0, 4.0, 3.0, 1.0, 0.0, 0.0, 0.0, 0.0],
               [3.0, 4.0, 0.0, 4.0, 0.0, 0.0, 0.0, 0.0],
               [4.0, 0.0, 3.0, 2.0, 0.0, 0.0, 0.0, 0.0],
               [3.0, 4.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]])




c = 27 algorithm 3.3/3.4








@set_graph
{
	"map": [[],
	        [],
		[]],
}
-> return code



@get_path
{
	"algo":   0,
	"source": 0,
	"target": 3
}
->
return code (error)

OR

{
	"path": [0, 1, 2, 3]
}



@get_paths
{
	"algo": 0,
	"pairs": [(0,3), (0,2), (1,10)]
}
->
{
	"paths": {
            (0, 3): [0, 1, 2, 3],
	    (0, 2): [0, 1, 2]
	    (1, 10): return code (error)
	}
}
